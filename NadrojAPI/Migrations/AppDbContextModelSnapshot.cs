// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NadrojAPI.Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace NadrojAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("NadrojAPI.Models.CardModel", b =>
                {
                    b.Property<int>("cardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("cardId"));

                    b.Property<string>("color")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<char>("rank")
                        .HasColumnType("character(1)");

                    b.Property<string>("suit")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("cardId");

                    b.ToTable("cards");
                });

            modelBuilder.Entity("NadrojAPI.Models.TournamentModel", b =>
                {
                    b.Property<int>("tournamentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("tournamentId"));

                    b.Property<double>("entryFee")
                        .HasColumnType("double precision");

                    b.Property<string>("nickName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("numEntries")
                        .HasColumnType("integer");

                    b.Property<double>("prizePool")
                        .HasColumnType("double precision");

                    b.HasKey("tournamentId");

                    b.ToTable("tournaments");
                });
#pragma warning restore 612, 618
        }
    }
}
